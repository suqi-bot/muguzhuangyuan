import{Q as w,a as C,b as h,c}from"./index-PjnBo1wj.js";const T=w("cart",()=>{const s=C(),r=h([]),n=h([]),v=c(()=>r.value.reduce((e,t)=>e+t.quantity,0)),u=c(()=>r.value.reduce((e,t)=>e+t.price*t.quantity,0)),d=c(()=>r.value.reduce((e,t)=>{const a=t.originalPrice||t.price;return e+a*t.quantity},0)),p=c(()=>d.value-u.value),f=(e,t=1)=>{if(!s.isAuthenticated)throw new Error("请先登录");const a=r.value.find(i=>i.id===e.id);if(a)a.quantity+=t;else{const i={id:e.id,name:e.name,description:e.description,image:e.image,price:e.price,originalPrice:e.originalPrice,quantity:t,category:e.category,specs:e.specs};r.value.push(i)}o()},S=(e,t)=>{const a=r.value.find(i=>i.id===e);a&&(t<=0?l(e):(a.quantity=t,o()))},l=e=>{const t=r.value.findIndex(a=>a.id===e);t>-1&&(r.value.splice(t,1),o())},m=()=>{r.value=[],o()},A=async e=>{if(!s.isAuthenticated)throw new Error("请先登录");if(r.value.length===0)throw new Error("购物车为空");const t={id:"ORDER_"+Date.now()+"_"+Math.random().toString(36).substring(2,11),userId:String(s.user?.id||s.user?.username||"unknown"),items:[...r.value],totalAmount:u.value,status:"待发货",createdAt:new Date().toISOString(),shippingAddress:e.shippingAddress,contactPhone:e.contactPhone,remarks:e.remarks};n.value.unshift(t),m(),I();try{(await fetch("/api/orders/create",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s.user?.token||""}`},body:JSON.stringify({orderNo:t.id,userId:t.userId,items:t.items,totalAmount:t.totalAmount,status:t.status,shippingAddress:t.shippingAddress,contactPhone:t.contactPhone,remarks:t.remarks,orderType:"product"})})).ok&&console.log("订单已同步到后端")}catch(a){console.log("后端同步失败，订单已保存到本地:",a)}return t},y=()=>{if(!s.isAuthenticated)return[];const e=s.user?.id||s.user?.username;return n.value.filter(t=>t.userId===e)},o=()=>{if(s.isAuthenticated){const e=s.user?.id||s.user?.username;localStorage.setItem(`cart_${e}`,JSON.stringify(r.value))}},g=()=>{if(s.isAuthenticated){const e=s.user?.id||s.user?.username,t=localStorage.getItem(`cart_${e}`);t&&(r.value=JSON.parse(t))}},I=()=>{localStorage.setItem("product_orders",JSON.stringify(n.value))},O=()=>{const e=localStorage.getItem("product_orders");e&&(n.value=JSON.parse(e))};return{items:r,orders:n,totalItems:v,totalAmount:u,originalTotalAmount:d,savedAmount:p,addToCart:f,updateQuantity:S,removeFromCart:l,clearCart:m,createOrder:A,getUserOrders:y,initializeUserData:()=>{g(),O()},clearUserData:()=>{r.value=[]},saveCartToStorage:o,loadCartFromStorage:g}});export{T as useCartStore};

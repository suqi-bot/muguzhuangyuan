import{Q as L,a as U,b as d}from"./index-PjnBo1wj.js";const T=L("chatHistory",()=>{const r=U(),o=d([]),n=d(""),f=d(!1),u=()=>o.value.find(s=>s.id===n.value)||null,h=(s,e)=>{const t="session_"+Date.now()+"_"+Math.random().toString(36).substring(2,11),l={id:t,userId:s,sessionName:e||`AI选房会话 ${new Date().toLocaleString()}`,messages:[],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),context:{}};return o.value.unshift(l),n.value=t,a(),console.log("🆕 创建新会话:",t),t},v=s=>{const e=u();if(!e){console.warn("⚠️ 没有活动会话，无法添加消息");return}const t={...s,id:"msg_"+Date.now()+"_"+Math.random().toString(36).substring(2,11),timestamp:new Date().toLocaleTimeString()};e.messages.push(t),e.updatedAt=new Date().toISOString(),a(),console.log("💬 添加消息到会话:",e.id,t)},p=s=>{const e=u();e&&(e.context={...e.context,...s},e.updatedAt=new Date().toISOString(),a())},w=s=>o.value.filter(e=>e.userId===s),I=s=>o.value.find(t=>t.id===s)?(n.value=s,console.log("🔄 切换到会话:",s),!0):!1,A=s=>{const e=o.value.findIndex(t=>t.id===s);e>-1&&(o.value.splice(e,1),n.value===s&&(n.value=""),a(),console.log("🗑️ 删除会话:",s))},D=()=>{o.value=[],n.value="",localStorage.removeItem("chat_history"),console.log("🧹 清空所有会话")},i=()=>`chat_history_${r.user?.id||r.user?.username||"guest"}`,a=()=>{if(r.isAuthenticated)try{const s={sessions:o.value,currentSessionId:n.value,userId:r.user?.id||r.user?.username};localStorage.setItem(i(),JSON.stringify(s)),console.log("💾 保存聊天记录:",o.value.length,"个会话")}catch(s){console.error("❌ 保存聊天记录失败:",s)}},c=()=>{if(r.isAuthenticated)try{const s=localStorage.getItem(i());if(s){const e=JSON.parse(s),t=r.user?.id||r.user?.username;e.userId===t?(o.value=e.sessions||[],n.value=e.currentSessionId||"",console.log("📂 加载聊天记录:",o.value.length,"个会话")):(o.value=[],n.value="",console.log("🔄 用户不匹配，重置聊天记录"))}}catch(s){console.error("❌ 加载聊天记录失败:",s)}},S=()=>{o.value=[],n.value="",r.isAuthenticated&&localStorage.removeItem(i()),console.log("🧹 清空用户聊天记录")},y=()=>{c()},x=()=>{S()},M=s=>{const e=o.value.find(t=>t.id===s);return e?JSON.stringify(e,null,2):null},O=s=>{const e=o.value.find(t=>t.id===s);return e?{totalMessages:e.messages.length,userMessages:e.messages.filter(t=>t.type==="user").length,aiMessages:e.messages.filter(t=>t.type==="ai").length,roomRecommendations:e.messages.filter(t=>t.roomRecommendations&&t.roomRecommendations.length>0).length,orders:e.messages.filter(t=>t.orderInfo).length,duration:new Date(e.updatedAt).getTime()-new Date(e.createdAt).getTime()}:null},_=(s,e)=>{const t=e?o.value.filter(g=>g.id===e):o.value,l=[];return t.forEach(g=>{g.messages.forEach(m=>{m.content.toLowerCase().includes(s.toLowerCase())&&l.push(m)})}),l};return c(),{sessions:o,currentSessionId:n,isLoading:f,getCurrentSession:u,createSession:h,addMessage:v,updateSessionContext:p,getUserSessions:w,switchToSession:I,deleteSession:A,clearAllSessions:D,saveToStorage:a,loadFromStorage:c,exportSession:M,getSessionStats:O,searchMessages:_,clearUserData:S,initializeUserData:y,onUserLogout:x,getUserStorageKey:i}});export{T as useChatHistoryStore};
